import { p256 } from '@noble/curves/p256'
import { bytesToHex } from '@noble/hashes/utils'

import { computeComposites } from '../../src/crypto/computeComposites'

const P = (hex: string) => p256.ProjectivePoint.fromHex(hex)

const Fixture = {
  input: {
    G: '04a22460728dea6ae7a6128ce18bdd9ced1a390d0de7fc471a71063ad79cd0fdb5418e609902720d952f9077e1d37cb9c1c0f395ef44c8c8bc8111d12ba9207376',
    Y: '04ff932a445a7e096ed1c7288bf13f3dcf23e66d67c5c078fe1959324adc02c8de67ecb7a9b1a44e6bc91a01aa723f8764c1ad41e2de9b50949f58552b7c156406',
    P: [
      '04d64ec2d49182bc993df84ce8a6f29b0b8618f7db9ebed258b626f603f74c10663b96edbe2b0991e2517b8600058f1edf13e7564a0cda8737910ab6288cdfb054',
      '04c2997d5049c3b6e7acfbdce7748a0ef5ef7d07d62e5dc84073ec3d331f04611d1b7cd045ceb35f435eb73f663ffc15594920c332702658d416fe096f51895d61',
      '045c57fff3f873cb546f0f6f1e86e68b2f0067afe1b9124338d8cee9f900e290c653f2c41c105a4efc6fa86946128784e86eb14d1d53e207ea28a7e34d7cdf9a16',
      '043bb44daf6716d594b45970c43c7b4110a0f709609884226276c81d24877959d94097da574270e13dbec7ddee94caa8dfdbaa9657682880fcc4d814a7e732e456',
      '04bdc1b4509ef94f972652425bba78bb5ff407fefc8a0746e0727459240ec2df4dca08a4a6b04b82358ccbfd41528852722ca5cceb4bf823da98835d8470fa5a9d',
      '04138476f765c9f2ab9b1b37d52c98f779cd19a0015cc80a8c9cac5a80ddfe1a33f7f0253951c3389c8ef7146bccba57dd6b9d3741e4d795cb4eb74b84cae113ef',
      '04deba65f64a56f6a3e94c92410f132d03a87110ac2ff721f7d2ba45f4e58e46ded6810e8002af6a4ce50d5d7ac515d9e7a3039191d824992d2998e660e0eb75d7',
      '044b04da4d0ca9e59211477bdd7f6d4bceb4248a6458f04e134342589178436af89cb7f4e45f5e0c2f562e9136d1bc7e20379d51ebb550ef8e05e4a743a6c8ee8f',
      '044f4dd17de2d2ab5804f1c6eb916bf72be414b239daca27f6d6530a6148a292e532d4b1f41f56c0bc052863c6f358e1e91dd3c019e2d2f3954b5a7670bb8fcd7a',
      '04c35dbc7b83f7762a4311e8525dc0fda2fb40308562658f8ba3d06f53781baec1c7644040a1ce8c2268ecd7489b561cad8b66af10f4f0b629e774cba52e6aa335'
    ],
    Q: [
      '049b7da8ce1174a1a8e8e48e7443a24452f39ddb7524f189a2ff13a2b341a132f7def119501258a9791b4b3d66d2605a5bf236b325d72643df6ee6e71962f2624e',
      '04cf7134487d8093dfb10f90f9c4f82ac9d57c1f34d41e28fc7a37582e65092b23015e93a078842b069d31f6d9934d2b04e59f9ff7907ff2de72a9cca877590618',
      '042a2149aa1b5d41515b40d54d4e27bdf9adff67a58dacc0ddd3a68611c6741a62c0d050792c7862fab331295272cd9d81e120d0f5f046ebd0650d5bb8a3d5e108',
      '0439c497637b915c6d54a6ed9ee3e7d70ed94674aa430cba31ddbbfd07fbf161a2579f23b39f9173c465dddaf22da786e4608809a21df397ecc9d4b261fd4aec14',
      '04ce7aa9d2bdee0d88062e73d2681d80388f3e511a1265aa853259243fd18f77c5777806890732e0ba888d31b438cb2defad7fd8e68068dfd1b990d2ae2bcafb74',
      '0484eef0ff55b10080ef34492f9133aa39670bda57e45cee8e03d97425c13268dfd47b55955e1319a5a2dd591dd554d3c8376fbb0edb8878b516b252fc272e5e0b',
      '0488aacfcaa619b65f4c238e06c6e34e1abf99d8a6d384b13b0847ad9025aa442adbb01113069604585421e0f71dc0743be76f021f5facacba4f300d29a95cc1c7',
      '048052a0a5a9bfcade2cd1cb2c99b658c4324ebf95e12e2cc7ba928a594dd41c9793505fb04662dc935b5dcaff5e54660e177a5804ba2cd68a103d5b311522d4f2',
      '04d0ea9dd157f892af8e4651341c6492199f3935993a5c12ca99fe117565a33f879a8ab67a7f6f462be8087bc8e6c5a1cfdbddff2c745d6b7a884bd04e3fafb29e',
      '04c84a104ffb65c2e870050cdb626344e2ba1dbbf7491593a43b1b6e07fa6ea2e8bfd965de209046499da84d48d59fb8d4838ba72c19bc492769bbed4d83ee3f2d'
    ]
  },
  output: {
    compositeM:
      '0492c1b33509b3b52444327321f9c32e8754bcde8d4fe857352d6a50d30504212275aa4f8c87ac59a269ad5568e01c234a47ecf57481beed380a1711bf9f7cf2a5',
    compositeZ:
      '041f42089b54492d0939a02bcd182f1a01f70919650d9e1c672ceb598be8b391e2c28ea594c35709816766e3ed38782a135b826f49a7444cef58a6033faff75433',
    C: [
      'a3eb2526d6db4435dfbc161886e0f5101a59589269ff4dc931332f600a516798',
      '73c215f86f11961db49e42627387df57b32dbb18fa1297dba0328fa10d89984e',
      '3eedde3185b1ac8ac4aef352b950543f9b640d6650ad9f75aa19fb1fc39538f7',
      '4e0768cc586cd5c2343417cc2852fc58b00a2435eb23519c4c4cb9c8c7fd79db',
      '2a1105f4bc362bb9305de82d1e343e0bd9318edab29c8b2d3547db25d5020b9b',
      '28d13830c8647cbb59dcc3a22c44f76622db62a5a2ac3753130d8e1ada87d2ab',
      'd4fec0d0cb99bab6a170082f9ff1f0edb0fccbeced11e35391fbeabd82a08cc6',
      'faaebb7dc99a939a772e2ebc6d2152f18c52e5ff18bbc44f0c90d4a9c21adf6b',
      'f96c51aeac7d7db96c104ec408557ec37f53b95c395898c28e1717494414a6c7',
      '1837cd29f9956a83e121886107ee735069a2341ec3da4f35e9ba5a234afb7b32'
    ]
  }
}

describe('computeComposites', () => {
  it('should match Go impl', () => {
    const g = P(Fixture.input.G)
    const y = P(Fixture.input.Y)
    const p = Fixture.input.P.map(P)
    const q = Fixture.input.Q.map(P)

    const m = P(Fixture.output.compositeM)
    const z = P(Fixture.output.compositeZ)

    const composites = computeComposites(g, y, p, q)

    expect(composites.m.equals(m)).toBe(true)
    expect(composites.z.equals(z)).toBe(true)
    expect(composites.c.map(bytesToHex)).toEqual(Fixture.output.C)
  })
})
