# This has been auto generated from .ci/jobs.yml. Do not edit this file!
name: CI
'on':
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  lint-all:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 18
          - 19
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Get PNPM Store Path
        id: pnpm-store-path
        run: echo "::set-output name=path::$(pnpm store path)"
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |-
            ${{ steps.pnpm-store-path.outputs.path }}
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/puppeteer-cache
          key: v1-dependencies-${{ runner.os }}-${{ hashFiles('package.json', 'pnpm-lock.yaml') }}-${{ matrix.node-version }}
      - name: PNPM Install
        run: |-
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          pnpm install # --no-frozen-lockfile 
          git diff
          export PUPPETEER_PRODUCT='firefox'
          pnpm install
      - name: Lint Project
        run: |
          # show only errors with --quiet
          pnpm lint:all --quiet
  build-safari:
    runs-on: macos-latest
    strategy:
      matrix:
        node-version:
          - 18
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Get PNPM Store Path
        id: pnpm-store-path
        run: echo "::set-output name=path::$(pnpm store path)"
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |-
            ${{ steps.pnpm-store-path.outputs.path }}
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/puppeteer-cache
          key: v1-dependencies-${{ runner.os }}-${{ hashFiles('package.json', 'pnpm-lock.yaml') }}-${{ matrix.node-version }}
      - name: PNPM Install
        run: |-
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          pnpm install # --no-frozen-lockfile 
          git diff
          export PUPPETEER_PRODUCT='firefox'
          pnpm install
      - name: Build Safari
        run: |
          cd packages/coil-extension
          pnpm build-prod safari
          scripts/build-safari.sh
  coil-extension-package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 18
          - 19
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Get PNPM Store Path
        id: pnpm-store-path
        run: echo "::set-output name=path::$(pnpm store path)"
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |-
            ${{ steps.pnpm-store-path.outputs.path }}
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/puppeteer-cache
          key: v1-dependencies-${{ runner.os }}-${{ hashFiles('package.json', 'pnpm-lock.yaml') }}-${{ matrix.node-version }}
      - name: PNPM Install
        run: |-
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          pnpm install # --no-frozen-lockfile 
          git diff
          export PUPPETEER_PRODUCT='firefox'
          pnpm install
      - name: Package for firefox
        run: |
          cd packages/coil-extension
          ./package.sh firefox
      - name: Package for chrome
        run: |
          cd packages/coil-extension
          ./package.sh chrome
      - name: Lint firefox package
        run: |
          cd packages/coil-extension
          pnpm addons-linter coilfirefoxextension@coil.com.xpi
  build-all-package-references-typescript:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 18
          - 19
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Get PNPM Store Path
        id: pnpm-store-path
        run: echo "::set-output name=path::$(pnpm store path)"
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |-
            ${{ steps.pnpm-store-path.outputs.path }}
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/puppeteer-cache
          key: v1-dependencies-${{ runner.os }}-${{ hashFiles('package.json', 'pnpm-lock.yaml') }}-${{ matrix.node-version }}
      - name: PNPM Install
        run: |-
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          pnpm install # --no-frozen-lockfile 
          git diff
          export PUPPETEER_PRODUCT='firefox'
          pnpm install
      - name: Build Root TypeScript Project - tsconfig.build.json
        run: |
          pnpm build:ts --verbose
  build-root-tsconfig:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 18
          - 19
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Get PNPM Store Path
        id: pnpm-store-path
        run: echo "::set-output name=path::$(pnpm store path)"
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |-
            ${{ steps.pnpm-store-path.outputs.path }}
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/puppeteer-cache
          key: v1-dependencies-${{ runner.os }}-${{ hashFiles('package.json', 'pnpm-lock.yaml') }}-${{ matrix.node-version }}
      - name: PNPM Install
        run: |-
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          pnpm install # --no-frozen-lockfile 
          git diff
          export PUPPETEER_PRODUCT='firefox'
          pnpm install
      - name: Build Root TypeScript Project - tsconfig.json
        run: |
          pnpm tsc -b tsconfig.json --verbose
      - name: Build Root TypeScript Project - tsconfig.cjs.json
        run: |
          pnpm tsc -b tsconfig.cjs.json --verbose
      - name: Build Root TypeScript Project - tsconfig.esm.json
        run: |
          pnpm tsc -b tsconfig.esm.json --verbose
  jest-all:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 18
        test-command:
          - test:coverage
          - test:e2e:coverage
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Get PNPM Store Path
        id: pnpm-store-path
        run: echo "::set-output name=path::$(pnpm store path)"
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |-
            ${{ steps.pnpm-store-path.outputs.path }}
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/puppeteer-cache
          key: v1-dependencies-${{ runner.os }}-${{ hashFiles('package.json', 'pnpm-lock.yaml') }}-${{ matrix.node-version }}
      - name: PNPM Install
        run: |-
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          pnpm install # --no-frozen-lockfile 
          git diff
          export PUPPETEER_PRODUCT='firefox'
          pnpm install
      - name: Run jest via dynamic compilation
        run: |
          export DEBUG='coil*'
          export TS_JEST_MAP_PATHS_TO_MODULES=true
          xvfb-run -a pnpm ${{ matrix.test-command }}
      - name: Run jest via babel
        run: |
          export DEBUG='coil*'
          export TS_JEST_MAP_PATHS_TO_MODULES=true
          cp jest.config.local.example.cjs jest.config.local.cjs 
          xvfb-run -a pnpm ${{ matrix.test-command }}
      - name: Run jest from build
        run: |
          export DEBUG='coil*'
          pnpm clean:build || echo "already clean"
          pnpm build:ts:verbose
          export TS_JEST_MAP_PATHS_TO_MODULES=false
          xvfb-run -a pnpm ${{ matrix.test-command }}
  jest-pnpm-run-all:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 18
        test-command:
          - test:coverage
          - test:e2e:coverage
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Get PNPM Store Path
        id: pnpm-store-path
        run: echo "::set-output name=path::$(pnpm store path)"
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |-
            ${{ steps.pnpm-store-path.outputs.path }}
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/puppeteer-cache
          key: v1-dependencies-${{ runner.os }}-${{ hashFiles('package.json', 'pnpm-lock.yaml') }}-${{ matrix.node-version }}
      - name: PNPM Install
        run: |-
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          pnpm install # --no-frozen-lockfile 
          git diff
          export PUPPETEER_PRODUCT='firefox'
          pnpm install
      - name: PNPM run jest via dynamic compilation
        run: |
          export TS_JEST_MAP_PATHS_TO_MODULES=true
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          xvfb-run -a pnpm run --filter="!(web-monetization)" ${{ matrix.test-command }}
      - name: PNPM run jest from build
        run: |
          pnpm clean:build || echo "already clean"
          pnpm build:ts:verbose
          export TS_JEST_MAP_PATHS_TO_MODULES=false
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          xvfb-run -a pnpm run --filter="!(web-monetization)"  ${{ matrix.test-command }}
  packages-build-scripts:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 18
          - 19
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Get PNPM Store Path
        id: pnpm-store-path
        run: echo "::set-output name=path::$(pnpm store path)"
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |-
            ${{ steps.pnpm-store-path.outputs.path }}
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/puppeteer-cache
          key: v1-dependencies-${{ runner.os }}-${{ hashFiles('package.json', 'pnpm-lock.yaml') }}-${{ matrix.node-version }}
      - name: PNPM Install
        run: |-
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          pnpm install # --no-frozen-lockfile 
          git diff
          export PUPPETEER_PRODUCT='firefox'
          pnpm install
      - name: Packages Build Scripts
        run: |
          pnpm run --filter="!(web-monetization)" build
  pnpm-format-and-upkeep-diff-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 18
          - 19
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Get PNPM Store Path
        id: pnpm-store-path
        run: echo "::set-output name=path::$(pnpm store path)"
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |-
            ${{ steps.pnpm-store-path.outputs.path }}
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/puppeteer-cache
          key: v1-dependencies-${{ runner.os }}-${{ hashFiles('package.json', 'pnpm-lock.yaml') }}-${{ matrix.node-version }}
      - name: PNPM Install
        run: |-
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          pnpm install # --no-frozen-lockfile 
          git diff
          export PUPPETEER_PRODUCT='firefox'
          pnpm install
      - name: PNPM Dedupe Check
        run: |
          pnpm dedupe
          git diff --exit-code
      - name: PNPM build:ci git diff --exit-code
        run: |
          pnpm build:ci
          git diff --exit-code
      - name: PNPM format git diff --exit-code
        run: |
          pnpm format
          pnpm upkeep
          git diff --exit-code
      - name: Build generated code git diff --exit-code
        run: |
          pnpm run --stream --filter="!(web-monetization)" generate-code
          git diff --exit-code
