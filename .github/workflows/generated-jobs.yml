name: CI
'on':
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  lint-all:
    strategy:
      matrix:
        node-version:
          - 16
          - 18
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.yarn
          key: v1-dependencies-${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock') }}-${{ matrix.node-version }}
      - name: Yarn Install
        run: |-
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          yarn --immutable
          export PUPPETEER_PRODUCT='firefox'
          yarn rebuild puppeteer
      - name: Lint Project
        run: |
          # show only errors with --quiet
          yarn lint:all --quiet
  build-safari:
    strategy:
      matrix:
        node-version:
          - 16
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.yarn
          key: v1-dependencies-${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock') }}-${{ matrix.node-version }}
      - name: Yarn Install
        run: |-
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          yarn --immutable
          export PUPPETEER_PRODUCT='firefox'
          yarn rebuild puppeteer
      - name: Build Safari
        run: |
          cd packages/coil-extension
          yarn build-prod safari
          scripts/build-safari.sh
  coil-extension-package:
    strategy:
      matrix:
        node-version:
          - 16
          - 18
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.yarn
          key: v1-dependencies-${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock') }}-${{ matrix.node-version }}
      - name: Yarn Install
        run: |-
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          yarn --immutable
          export PUPPETEER_PRODUCT='firefox'
          yarn rebuild puppeteer
      - name: Package for firefox
        run: |
          cd packages/coil-extension
          ./package.sh firefox
      - name: Package for chrome
        run: |
          cd packages/coil-extension
          ./package.sh chrome
      - name: Lint firefox package
        run: |
          cd packages/coil-extension
          yarn addons-linter coilfirefoxextension@coil.com.xpi
  build-all-package-references-typescript:
    strategy:
      matrix:
        node-version:
          - 16
          - 18
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.yarn
          key: v1-dependencies-${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock') }}-${{ matrix.node-version }}
      - name: Yarn Install
        run: |-
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          yarn --immutable
          export PUPPETEER_PRODUCT='firefox'
          yarn rebuild puppeteer
      - name: Build Root TypeScript Project - tsconfig.build.json
        run: |
          yarn build:ts --verbose
  build-root-tsconfig:
    strategy:
      matrix:
        node-version:
          - 16
          - 18
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.yarn
          key: v1-dependencies-${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock') }}-${{ matrix.node-version }}
      - name: Yarn Install
        run: |-
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          yarn --immutable
          export PUPPETEER_PRODUCT='firefox'
          yarn rebuild puppeteer
      - name: Build Root TypeScript Project - tsconfig.json
        run: |
          yarn tsc -b tsconfig.json --verbose
  jest-all:
    strategy:
      matrix:
        node-version:
          - 16
          - 18
        test-command:
          - test:coverage
          - test:e2e:coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.yarn
          key: v1-dependencies-${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock') }}-${{ matrix.node-version }}
      - name: Yarn Install
        run: |-
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          yarn --immutable
          export PUPPETEER_PRODUCT='firefox'
          yarn rebuild puppeteer
      - name: Run jest via dynamic compilation
        run: |
          export DEBUG='coil*'
          export TS_JEST_MAP_PATHS_TO_MODULES=true
          xvfb-run -a yarn ${{ matrix.test-command }}
      - name: Run jest via babel
        run: |
          export DEBUG='coil*'
          export TS_JEST_MAP_PATHS_TO_MODULES=true
          cp jest.config.local.example.js jest.config.local.js 
          xvfb-run -a yarn ${{ matrix.test-command }}
      - name: Run jest from build
        run: |
          export DEBUG='coil*'
          yarn clean:build || echo "already clean"
          yarn build:ts:verbose
          export TS_JEST_MAP_PATHS_TO_MODULES=false
          xvfb-run -a yarn ${{ matrix.test-command }}
  jest-workspaces-foreach-all:
    strategy:
      matrix:
        node-version:
          - 16
          - 18
        test-command:
          - test:coverage
          - test:e2e:coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.yarn
          key: v1-dependencies-${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock') }}-${{ matrix.node-version }}
      - name: Yarn Install
        run: |-
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          yarn --immutable
          export PUPPETEER_PRODUCT='firefox'
          yarn rebuild puppeteer
      - name: Yarn workspaces foreach run jest via dynamic compilation
        run: |
          export TS_JEST_MAP_PATHS_TO_MODULES=true
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          xvfb-run -a yarn workspaces foreach -v --exclude=web-monetization run ${{ matrix.test-command }}
      - name: Yarn workspaces foreach run jest from build
        run: |
          yarn clean:build || echo "already clean"
          yarn build:ts:verbose
          export TS_JEST_MAP_PATHS_TO_MODULES=false
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          xvfb-run -a yarn workspaces foreach -v --exclude=web-monetization run ${{ matrix.test-command }}
  packages-build-scripts:
    strategy:
      matrix:
        node-version:
          - 16
          - 18
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.yarn
          key: v1-dependencies-${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock') }}-${{ matrix.node-version }}
      - name: Yarn Install
        run: |-
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          yarn --immutable
          export PUPPETEER_PRODUCT='firefox'
          yarn rebuild puppeteer
      - name: Packages Build Scripts
        run: |
          yarn workspaces foreach -v --exclude=web-monetization run build
  yarn-format-and-upkeep-diff-check:
    strategy:
      matrix:
        node-version:
          - 16
          - 18
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.yarn
          key: v1-dependencies-${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock') }}-${{ matrix.node-version }}
      - name: Yarn Install
        run: |-
          export PUPPETEER_CACHE_DIR=$PWD/puppeteer-cache
          yarn --immutable
          export PUPPETEER_PRODUCT='firefox'
          yarn rebuild puppeteer
      - name: Yarn Dedupe Check
        run: |
          yarn dedupe --check
      - name: yarn dlx @yarnpkg/sdks vscode
        run: |
          yarn dlx @yarnpkg/sdks vscode
          git diff --exit-code -- . ':!yarn.lock' ':!.pnp.cjs'
      - name: Yarn format git diff --exit-code
        run: |
          yarn format
          yarn upkeep
          # yarn.lock sometimes (rarely) changes for unknown reasons
          # perhaps different versions of yarn ??
          # we don't *really* care so exclude it from the diff check
          git diff --exit-code -- . ':!yarn.lock' ':!.pnp.cjs'
      - name: Build generated code git diff --exit-code
        run: |
          yarn workspaces foreach -v --exclude=web-monetization run generate-code
          git diff --exit-code -- . ':!yarn.lock' ':!.pnp.cjs'
